\babel@toc {german}{}\relax 
\contentsline {section}{\numberline {1}Einleitung}{1}{section.1}%
\contentsline {section}{\numberline {2}Enums}{1}{section.2}%
\contentsline {subsection}{\numberline {2.1}Enums in Rust}{1}{subsection.2.1}%
\contentsline {subsubsection}{\numberline {2.1.1}Match Statement}{1}{subsubsection.2.1.1}%
\contentsline {subsubsection}{\numberline {2.1.2}Der Enum als algebraischer Datentyp}{1}{subsubsection.2.1.2}%
\contentsline {subsubsection}{\numberline {2.1.3}Rekusive Enums und Datentypen}{1}{subsubsection.2.1.3}%
\contentsline {subsubsection}{\numberline {2.1.4}Nested Pattern Matching}{1}{subsubsection.2.1.4}%
\contentsline {subsubsection}{\numberline {2.1.5}Generische Enums}{1}{subsubsection.2.1.5}%
\contentsline {subsubsection}{\numberline {2.1.6}Verwendung des Rust Enums zur Vermeidung von Nullpointer-Ausnahmen}{2}{subsubsection.2.1.6}%
\contentsline {subsection}{\numberline {2.2}Enums in Java}{2}{subsection.2.2}%
\contentsline {subsubsection}{\numberline {2.2.1}Normale Enums}{2}{subsubsection.2.2.1}%
\contentsline {subsubsection}{\numberline {2.2.2}Enums mit Werten}{2}{subsubsection.2.2.2}%
\contentsline {subsubsection}{\numberline {2.2.3}Enum Funktionen}{2}{subsubsection.2.2.3}%
\contentsline {subsection}{\numberline {2.3}Vergleich von Java und Rust Enums}{2}{subsection.2.3}%
\contentsline {subsection}{\numberline {2.4}Rust Enum Implementationsbeispiele}{2}{subsection.2.4}%
\contentsline {subsection}{\numberline {2.5}Beispielfunktionalit채t in Java}{2}{subsection.2.5}%
\contentsline {subsubsection}{\numberline {2.5.1}Expression-Logik in Java}{2}{subsubsection.2.5.1}%
\contentsline {subsubsection}{\numberline {2.5.2}Java Enums am Limit - Idee einer Wrapperinstanz f체r den Typ}{2}{subsubsection.2.5.2}%
\contentsline {section}{\numberline {3}Traits}{2}{section.3}%
\contentsline {subsection}{\numberline {3.1}Allgemeines zu Traits}{2}{subsection.3.1}%
\contentsline {subsubsection}{\numberline {3.1.1}Traits sind keine Typen}{2}{subsubsection.3.1.1}%
\contentsline {subsection}{\numberline {3.2}Traits in Rust}{2}{subsection.3.2}%
\contentsline {subsubsection}{\numberline {3.2.1}Default-Implementationen}{2}{subsubsection.3.2.1}%
\contentsline {subsubsection}{\numberline {3.2.2}Trait Bounds}{2}{subsubsection.3.2.2}%
\contentsline {paragraph}{Mehrfaches Traitbinding}{2}{section*.2}%
\contentsline {paragraph}{Konditionelle Implementierung mit Trait Bounds}{2}{section*.3}%
\contentsline {subsubsection}{\numberline {3.2.3}Dynamische Traits}{3}{subsubsection.3.2.3}%
\contentsline {subsubsection}{\numberline {3.2.4}Traits als Parameter}{3}{subsubsection.3.2.4}%
\contentsline {subsubsection}{\numberline {3.2.5}Supertraits}{3}{subsubsection.3.2.5}%
\contentsline {subsubsection}{\numberline {3.2.6}Referenzierung des eigenen Typen}{3}{subsubsection.3.2.6}%
\contentsline {subsubsection}{\numberline {3.2.7}Spezifizierung von Platzhaltertypen}{3}{subsubsection.3.2.7}%
\contentsline {subsubsection}{\numberline {3.2.8}Shorthand Schreibweise}{3}{subsubsection.3.2.8}%
\contentsline {subsubsection}{\numberline {3.2.9}Schreibeweise bei Uneindeutigkeit}{3}{subsubsection.3.2.9}%
\contentsline {subsection}{\numberline {3.3}Rust Trait Beispiele}{3}{subsection.3.3}%
\contentsline {subsection}{\numberline {3.4}Beispielfunktionalit채t in Java}{3}{subsection.3.4}%
\contentsline {section}{\numberline {4}Vergleich der beiden Ans채tze}{3}{section.4}%
